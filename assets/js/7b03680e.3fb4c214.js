"use strict";(self.webpackChunkswat_hub=self.webpackChunkswat_hub||[]).push([[9173],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>m});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(o),h=a,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||r;return o?n.createElement(m,i(i({ref:t},c),{},{components:o})):n.createElement(m,i({ref:t},c))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<r;p++)i[p]=o[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},470:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=o(7462),a=(o(7294),o(3905));const r={title:"3. Topology in IT Operations",description:"Use the File Observer to create topology",sidebar_position:3},i=void 0,s={unversionedId:"cloud-pak-aiops/topology-lab/creating-topology/index",id:"cloud-pak-aiops/topology-lab/creating-topology/index",title:"3. Topology in IT Operations",description:"Use the File Observer to create topology",source:"@site/labs/cloud-pak-aiops/topology-lab/3-creating-topology/index.mdx",sourceDirName:"cloud-pak-aiops/topology-lab/3-creating-topology",slug:"/cloud-pak-aiops/topology-lab/creating-topology/",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/topology-lab/creating-topology/",draft:!1,editUrl:"https://github.com/IBM/waiops-tech-jam/tree/main/labs/cloud-pak-aiops/topology-lab/3-creating-topology/index.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"3. Topology in IT Operations",description:"Use the File Observer to create topology",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"2. Lab Environment",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/topology-lab/lab-environment/"},next:{title:"4. Topology Rules",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/topology-lab/topology-rules/"}},l={},p=[{value:"Resources, Resource Groups and Applications",id:"resources-resource-groups-and-applications",level:3},{value:"Resources",id:"resources",level:4},{value:"Resource groups",id:"resource-groups",level:4},{value:"Applications",id:"applications",level:4},{value:"3.1: Topology Observers",id:"31-topology-observers",level:2},{value:"3.2: Creating Topology Files",id:"32-creating-topology-files",level:2},{value:"File Observer Format Overview",id:"file-observer-format-overview",level:4},{value:"3.3: Creating File Observer Jobs",id:"33-creating-file-observer-jobs",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Services and applications are increasingly deployed in environments that take advantage of distributed and often virtualized\ninfrastructure. For example, parts of a network might be cloud-based, with other connected elements contained within,\nor tethered to, legacy systems that exploit tried and tested on-prem capability. The result is often a highly distributed and\nincreasingly complex hybrid network that requires an agile and dynamic resource management capability in order to leverage\nand exploit its rapidly evolving technologies."),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"Resource Management")," capabilities in the Cloud Pak for AIOps provide operations teams with complete up-to-date\nvisibility and control over dynamic infrastructure and services. They let ITOps teams query a specific networked resource,\nand then presents a configurable topology view with its ecosystem of relationships and states, both in real time\nand within a definable time window. "),(0,a.kt)("p",null,"By visualizing complex network topologies in real-time, updated dynamically or on-demand, and allowing further investigation\nof events and incidents, operational efficiency is improved, problems are detected and solved faster, false alarms\nare reduced, and automation and collaboration between operational teams is enhanced."),(0,a.kt)("p",null,"Topology information adds enormous value to your IT Operations as it provides visibility into the environment and brings it\nto-life. With topology information its possible to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Visualize a seamless end-to-end view of the environment"),(0,a.kt)("li",{parentName:"ul"},"Create and view groups of resources that logically belong together"),(0,a.kt)("li",{parentName:"ul"},"Perform topology-based event correlation for events occurring within a group of related resources")),(0,a.kt)("p",null,"The Cloud Pak for AIOps can ingest topology data from many different sources. The multiple disparate pieces of\ntopology can then be stitched together, where it makes sense to do so, allowing to see the end-to-end\nenvironment with all the logical and physical connections represented."),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(4419).Z,width:"1362",height:"519"})),(0,a.kt)("h3",{id:"resources-resource-groups-and-applications"},"Resources, Resource Groups and Applications"),(0,a.kt)("p",null,"Resource Management has three categories of data: ",(0,a.kt)("strong",{parentName:"p"},"Resources"),", ",(0,a.kt)("strong",{parentName:"p"},"Resource groups"),", and ",(0,a.kt)("strong",{parentName:"p"},"Applications"),":"),(0,a.kt)("h4",{id:"resources"},"Resources"),(0,a.kt)("p",null,"Resources are the lowest level of element in the system and are what is represented in topology visualizations, search\nexperience, and APIs. They also form the basis of any topology-based event correlation. Resources are created in the system\nfrom observations of different technologies, in addition to allowing for proprietary topology data. These resources\ncan represent a multitude of different things from the different layers of the application and infrastructure stack, for\nexample host, vm, network interfaces, people, and locations. These resources are interconnected by relationships and their\nproperties, which describe how the resources relate to one another. The relationship types can represent physical connections\nor logical connections. For example, the network interface is ",(0,a.kt)("strong",{parentName:"p"},"part-of")," a host; the pod ",(0,a.kt)("strong",{parentName:"p"},"runs-on")," a host; person ",(0,a.kt)("strong",{parentName:"p"},"owns")," this service.\nAll these resources form together a complete, connected, end-to-end representation of the on-premises and cloud IT environment."),(0,a.kt)("h4",{id:"resource-groups"},"Resource groups"),(0,a.kt)("p",null,"Resource groups are an abstraction layer on top of resources. They aim to form collections of resources that capture some business\nor technical context within the environment for both search and correlation purposes. It might be something simple like a namespace\nor geographical region, but might also capture a network layer, protocol-specific constructs (like a VLAN), or a collection of\nresources that represent a running service instance. "),(0,a.kt)("p",null,"Resource groups are created either directly from topology Observers as they are observed\nfrom the various technologies ingesting topological data or can be created by defining templates that produce resource groups based\non a particular criteria. The templates allow to provide business logic to\ndefine how a grouping is created. The Cloud Pak for AIOps uses templates to dynamically create groups and maintain this dynamic\nmembership. "),(0,a.kt)("h4",{id:"applications"},"Applications"),(0,a.kt)("p",null,"Applications (or also defined as \u2018services\u2019 in the Telco industry), are the highest level of abstraction. Applications are simply a collection of\nresource groups that best represent the customer's application stack or service in terms of its composition. For example, an application might\nbe formed by a number of virtual machines and their\nhypervisors, network equipment, cloud-native services, a build pipeline, and a supporting organizational personnel. All of this can\nbe provided to form a single holistic representation of the application, which can be used as a shared context between many different\nIT teams. It is important to note that while the Cloud Pak for AIOps can be seen as \u2018application centric\u2019, it is sufficiently\nflexible to model services or general groups-of-groups that might be needed."),(0,a.kt)("p",null,"These applications, when combined with resource-level event correlation and grouping mechanisms, provide customers with rapid visibility\nof the overall state, which allows them to prioritize root cause analysis and remediation work. They also allow operators to focus on specific\nsets of resources that are known to relate to a specific application, so they can exclude resources and groups of resources that are not of interest."),(0,a.kt)("h2",{id:"31-topology-observers"},"3.1: Topology Observers"),(0,a.kt)("p",null,"A Topology Observer is a service that extracts resource information from a target source.\nUsing the Observer UI, different observer jobs can be configured and run.\nAt the time of writing this Lab, there are 34 different Observers available. The Observers\nare designed to connect to specific types of topology sources, such as\nServiceNow, Dynatrace, or VMware vCenter. "),(0,a.kt)("p",null,"Two of the Observers are generic:\nthe File Observer (for ingesting file-based topology data) and the REST Observer\n(for ingesting topology data programmatically via an API)."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"In order to save resources, only a subset of Observers are enabled by default. You can see the full list\nof Observers and the steps to enable them by following the ",(0,a.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/cloud-paks/cloud-pak-watson-aiops/4.1.0?topic=integrations-observer-jobs"},(0,a.kt)("strong",{parentName:"a"},"documentation")))),(0,a.kt)("p",null,"In this Lab, we will only leverage the File Observer, but a similar process applies to other Observers.\nBy the end of this module, you will have created various topology Observer jobs and ingested different sets of topology data. "),(0,a.kt)("h2",{id:"32-creating-topology-files"},"3.2: Creating Topology Files"),(0,a.kt)("p",null,"This first step involves the following tasks:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create two sample files with topology data"),(0,a.kt)("li",{parentName:"ul"},"Load this data into the Cloud Pak for AIOps using the File Observer")),(0,a.kt)("p",null,"In a real-world scenario, it is likely that you would be using a number of\noff-the-shelf Observers to get your topology data from your environment. It is\nalso likely however that you would also leverage the File or REST Observers\neither to ingest data for which an off-the-shelf Observer doesn't exist, or to\nmanually create relationships between Resources in your topology for which there\nis no import source. For example, you may wish to create connections between\nresources to represent logical connections or dependencies that aren't included\nin the original data sets. In any case, this exercise will give you the skills to use the\nFile Observer, which will also provide you with a little more knowledge of what's\ngoing on under the covers."),(0,a.kt)("p",null,"In this scenario, we will have one set of topology data that represents\n",(0,a.kt)("strong",{parentName:"p"},"physical infrastructure"),", and a second set of topology data that represents\nsome ",(0,a.kt)("strong",{parentName:"p"},"applications")," running on that physical infrastructure. An example of\nthis might be physical topology data ingested from an orchestrator, such as\nOpenStack, and application data, coming from an application management tool,\nsuch as AppDynamics or Instana."),(0,a.kt)("p",null,"Lets create a folder for the topology files in the home directory and change to this new folder.\nRun the following command from the ",(0,a.kt)("strong",{parentName:"p"},"Terminal")," window:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd; mkdir lab; cd lab\n")),(0,a.kt)("p",null,"Create a file called ",(0,a.kt)("strong",{parentName:"p"},"infrastructure.txt")," by running the following command in the ",(0,a.kt)("strong",{parentName:"p"},"Terminal")," window to open the text editor\n, copy the infrastructure topology data listed below (use the copy helper icon (top-right) for one-click copy), paste it into the text editor,\nclick on the ",(0,a.kt)("strong",{parentName:"p"},"Save")," button in the text editor and close the editor window (click on the X). "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gedit infrastructure.txt\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'V:{"_operation":"InsertReplace","uniqueId":"379177a8-0a6a-4068-817c-d6d6e870437e","matchTokens":["379177a8-0a6a-4068-817c-d6d6e870437e","router1"],"tags":["WAIOpsDemo"],"name":"router1","entityTypes":["router"],"_references":[{"_toUniqueId":"7598a194-27a0-4d0b-9c49-cbc0070c99c9","_edgeType":"uses"}]}\nV:{"_operation":"InsertReplace","uniqueId":"9c1f90e0-7dc4-40d8-8721-40ea2f3af453","matchTokens":["9c1f90e0-7dc4-40d8-8721-40ea2f3af453","Intel"],"tags":["WAIOpsDemo"],"name":"Intel","entityTypes":["cpu"],"_references":[]}\nV:{"_operation":"InsertReplace","uniqueId":"222-9c1f90e0-7dc4-40d8-8721-40ea2f3af453","matchTokens":["222-9c1f90e0-7dc4-40d8-8721-40ea2f3af453","AMD"],"tags":["WAIOpsDemo"],"name":"AMD","entityTypes":["cpu"],"_references":[]}\nV:{"_operation":"InsertReplace","uniqueId":"7598a194-27a0-4d0b-9c49-cbc0070c99c9","matchTokens":["7598a194-27a0-4d0b-9c49-cbc0070c99c9","greatFireWallOfSecurity"],"tags":["WAIOpsDemo"],"name":"greatFireWallOfSecurity","entityTypes":["firewall"],"_references":[]}\nV:{"_operation":"InsertReplace","uniqueId":"974d1788-1312-4151-8a62-73fa1854e807","matchTokens":["974d1788-1312-4151-8a62-73fa1854e807","computer1000"],"tags":["WAIOpsDemo"],"name":"computer1000","entityTypes":["computer"],"_references":[{"_toUniqueId":"379177a8-0a6a-4068-817c-d6d6e870437e","_edgeType":"connectedTo"},{"_toUniqueId":"9c1f90e0-7dc4-40d8-8721-40ea2f3af453","_edgeType":"contains"},{"_toUniqueId":"222-9c1f90e0-7dc4-40d8-8721-40ea2f3af453","_edgeType":"contains"}]}\nV:{"_operation":"InsertReplace","uniqueId":"5c6f968a-2006-4b43-96b5-dd53df6b0afb","matchTokens":["5c6f968a-2006-4b43-96b5-dd53df6b0afb","steve"],"tags":["WAIOpsDemo"],"name":"steve","entityTypes":["person"],"_references":[{"_toUniqueId":"974d1788-1312-4151-8a62-73fa1854e807","_edgeType":"uses"}]}\n')),(0,a.kt)("p",null,"Repeat the process and create a second file called ",(0,a.kt)("strong",{parentName:"p"},"application.txt")," by running the following command and use the application topology data listed below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gedit application.txt\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'V:{"_operation":"InsertReplace","uniqueId":"111-379177a8-0a6a-4068-817c-d6d6e870437e","matchTokens":["111-379177a8-0a6a-4068-817c-d6d6e870437e","billing"],"tags":["WAIOpsDemo"],"name":"billing","entityTypes":["application"],"_references":[{"_toUniqueId":"111-974d1788-1312-4151-8a62-73fa1854e807","_edgeType":"runsOn"}]}\nV:{"_operation":"InsertReplace","uniqueId":"111-9c1f90e0-7dc4-40d8-8721-40ea2f3af453","matchTokens":["111-9c1f90e0-7dc4-40d8-8721-40ea2f3af453","webserver"],"tags":["WAIOpsDemo"],"name":"webserver","entityTypes":["application"],"_references":[{"_toUniqueId":"111-974d1788-1312-4151-8a62-73fa1854e807","_edgeType":"runsOn"}]}\nV:{"_operation":"InsertReplace","uniqueId":"111-974d1788-1312-4151-8a62-73fa1854e807","matchTokens":["111-974d1788-1312-4151-8a62-73fa1854e807","computer1000"],"tags":["WAIOpsDemo"],"name":"computer1000","entityTypes":["computer"],"_references":[]}\n')),(0,a.kt)("p",null,"Confirm that you have two files created with data by running the command below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ls -l infrastructure.txt application.txt\n")),(0,a.kt)("h4",{id:"file-observer-format-overview"},"File Observer Format Overview"),(0,a.kt)("p",null,"The JSON format in these two sample files is the format expected by the File Observer, and contains\ntopology directives, one per line."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Additional File Observer topology format information can be found in the ",(0,a.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/cloud-paks/cloud-pak-watson-aiops/4.1.0?topic=jobs-file-observer"},(0,a.kt)("strong",{parentName:"a"},"documentation")))),(0,a.kt)("p",null,"Resource properties definition:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"_",'operation: A value of "InsertReplace" means that this Resource will be\ninserted into the topology if it does not already exist, and replace the\ncurrent one if it does.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"uniqueId: This must be a globally unique identifier for the Resource. The\noff-the-shelf Observers will ensure uniqueness automatically. When using the\nFile Observer, care must be taken to ensure uniqueness, otherwise you may\ninadvertently overwrite existing Resources with new ones.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"matchTokens: These values (comma separated list) are used to match the\nResource against the incoming event stream. Where there is a match, the event will be associated with\nthe Resource and be visible from the topology view.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"tags: Tags can be handy to group Resources together, or for searching across\nresources that share a common tag. A resource can have multiple tags and\nrepresents a kind of group membership. ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"name: This is the primary identity of the Resource, and would normally be its\nmost recognisable and human-readable name. The name attribute is normally the\none shown in the topology viewer against a Resource.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"entityTypes: This defines what type of Resource is being created for\nexample: a computer or a database and will also dictate which icon it will\nuse in the topology view.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"references: this adds one or more edges to another resource. Each edge in the list can have some of these keywords:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"_","fromUniqueId and ","_","toUniqueId: these parameters\nrepresent the start or end points for the relationship. "),(0,a.kt)("li",{parentName:"ul"},"_",'edgeType: this parameter specifies the type of relationship this relates to, for example,\nits indicating a "uses" or a "contains" type of relationship. A list of default Edge types is documented ',(0,a.kt)("a",{parentName:"li",href:"https://www.ibm.com/docs/en/cloud-paks/cloud-pak-watson-aiops/4.1.0?topic=reference-edge-types"},(0,a.kt)("strong",{parentName:"a"},"here")),".")))),(0,a.kt)("h2",{id:"33-creating-file-observer-jobs"},"3.3: Creating File Observer Jobs"),(0,a.kt)("p",null,"Log into the Cloud Pak for AIOps: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"from the burger menu in the top-left navigate to: ",(0,a.kt)("strong",{parentName:"li"},"Define \u2192 Data and tool connections")),(0,a.kt)("li",{parentName:"ul"},"from the ",(0,a.kt)("strong",{parentName:"li"},"Data and tool connections")," page, click on ",(0,a.kt)("strong",{parentName:"li"},"Add connection")),(0,a.kt)("li",{parentName:"ul"},"from the ",(0,a.kt)("strong",{parentName:"li"},"Add connections")," page, under Category click on ",(0,a.kt)("strong",{parentName:"li"},"Topology")," then search for ",(0,a.kt)("strong",{parentName:"li"},"File"),", click on the ",(0,a.kt)("strong",{parentName:"li"},"File")," tile and click ",(0,a.kt)("strong",{parentName:"li"},"Connect"))),(0,a.kt)("p",null,"In the ",(0,a.kt)("strong",{parentName:"p"},"New observer job: File"),' form, fill the Unique ID field as "infrastructure". Keep the\n',(0,a.kt)("strong",{parentName:"p"},"File Mode")," as ",(0,a.kt)("strong",{parentName:"p"},"Upload local file"),", upload the ",(0,a.kt)("strong",{parentName:"p"},"infrastructure.txt")," file that you created in the previous\nstep and click the ",(0,a.kt)("strong",{parentName:"p"},"Save")," button. The Provider field will be automatically populated when you click ",(0,a.kt)("strong",{parentName:"p"},"Save"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(8457).Z,width:"829",height:"752"})),(0,a.kt)("p",null,"Now click on the ",(0,a.kt)("strong",{parentName:"p"},"Add a new job")," button, from the pop-up choose the ",(0,a.kt)("strong",{parentName:"p"},"File"),' observer and repeat the process by creating a second File Observer\njob with the Unique ID as "application" and this time load the ',(0,a.kt)("strong",{parentName:"p"},"application.txt")," file."),(0,a.kt)("p",null,"Each job will run the moment it is saved. After you have done this, your\nObserver jobs screen should look like the one below. You can verify that your jobs ran successfully by confirming the Ready status\nfor each job:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(1710).Z,width:"1864",height:"466"})),(0,a.kt)("p",null,"We will now search the topology for your newly added resources.\nFrom the burger menu in the top-left, navigate to: ",(0,a.kt)("strong",{parentName:"p"},"Operate \u2192 Resource management"),".\nIn the ",(0,a.kt)("strong",{parentName:"p"},"Resource management")," page, click on the ",(0,a.kt)("strong",{parentName:"p"},"Resources")," tab. You\nshould see nine resources listed:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(7815).Z,width:"1223",height:"581"})),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},'There are two resources in the list called "computer1000". One is from the\ntopology segment ingested from the infrastructure.txt file and the other one is\nfrom the topology segment ingested from the application.txt file. We will be\nmerging these two Resources together in the next chapter, via a Merge Rule.')),(0,a.kt)("p",null,"Click on ",(0,a.kt)("strong",{parentName:"p"},"router1")," and it will open the topology view. Increase the number of\nhops to 2 by clicking on the hops drop down list:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(4767).Z,width:"1223",height:"581"})),(0,a.kt)("p",null,"Click the ",(0,a.kt)("strong",{parentName:"p"},"Render")," button and you should see six resources as shown below:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(9375).Z,width:"1113",height:"619"})),(0,a.kt)("p",null,"You can click Back on your browser window and click on one of the other\nResources ingested via the ",(0,a.kt)("strong",{parentName:"p"},"application")," job (e.g. billing). You will see a\nrepresentation of the topology segment created by ingesting that file."))}u.isMDXComponent=!0},4419:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/end-to-end-topology-6fb24b415d9768abe763a0f7a58e6de5.png"},4767:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/hops-70e657f8e6b5e63cf1729936c0bb9a46.png"},8457:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/infrajob-05dee53ece2b33d5ced8a742e0ad7fd6.png"},1710:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/observers-28b215b111e30a5e86ad329ca71cc260.png"},7815:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/resources-3d595028460f7e646c96dc1b8b9a95bf.png"},9375:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/router-6bde47c1ede9a7f600e74ef7a2b6b552.png"}}]);